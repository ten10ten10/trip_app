// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package api

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerAuthScopes = "BearerAuth.Scopes"
)

// AuthResponse defines model for AuthResponse.
type AuthResponse struct {
	// Token Authentication token (JWT) for the new user.
	Token *string `json:"token,omitempty"`
	User  *User   `json:"user,omitempty"`
}

// Error defines model for Error.
type Error struct {
	Message *string `json:"message,omitempty"`
}

// LoginRequest defines model for LoginRequest.
type LoginRequest struct {
	Email openapi_types.Email `json:"email"`

	// Password メールで受け取った初期パスワード
	Password string `json:"password"`
}

// Member defines model for Member.
type Member struct {
	Id   *openapi_types.UUID `json:"id,omitempty"`
	Name *string             `json:"name,omitempty"`
}

// Message defines model for Message.
type Message struct {
	Message *string `json:"message,omitempty"`
}

// NewSchedule defines model for NewSchedule.
type NewSchedule = UpdateSchedule

// NewTripRequest defines model for NewTripRequest.
type NewTripRequest struct {
	EndDate   openapi_types.Date `json:"endDate"`
	Members   *[]Member          `json:"members,omitempty"`
	StartDate openapi_types.Date `json:"startDate"`
	Title     string             `json:"title"`
}

// NewUser defines model for NewUser.
type NewUser struct {
	Email *openapi_types.Email `json:"email,omitempty"`
	Name  *string              `json:"name,omitempty"`
}

// PasswordChangeRequest defines model for PasswordChangeRequest.
type PasswordChangeRequest struct {
	// CurrentPassword 現在のパスワード
	CurrentPassword string `json:"currentPassword"`

	// NewPassword 新しいパスワード
	NewPassword string `json:"newPassword"`
}

// Schedule defines model for Schedule.
type Schedule struct {
	CreatedAt     *time.Time          `json:"createdAt,omitempty"`
	EndDateTime   *time.Time          `json:"endDateTime,omitempty"`
	Id            *openapi_types.UUID `json:"id,omitempty"`
	Memo          *string             `json:"memo"`
	StartDateTime *time.Time          `json:"startDateTime,omitempty"`
	Title         *string             `json:"title,omitempty"`
	UpdatedAt     *time.Time          `json:"updatedAt,omitempty"`
}

// ShareLinkResponse defines model for ShareLinkResponse.
type ShareLinkResponse struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// ShareToken 生成された共有用トークン
	ShareToken *string `json:"shareToken,omitempty"`

	// ShareUrl ユーザーが共有する完全なURL
	ShareUrl  *string    `json:"shareUrl,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Trip defines model for Trip.
type Trip struct {
	CreatedAt *time.Time          `json:"createdAt,omitempty"`
	EndDate   *openapi_types.Date `json:"endDate,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Members   *[]Member           `json:"members,omitempty"`
	StartDate *openapi_types.Date `json:"startDate,omitempty"`
	Title     *string             `json:"title,omitempty"`
	UpdatedAt *time.Time          `json:"updatedAt,omitempty"`
}

// UpdateSchedule defines model for UpdateSchedule.
type UpdateSchedule struct {
	EndDateTime   *time.Time `json:"endDateTime,omitempty"`
	Memo          *string    `json:"memo"`
	StartDateTime *time.Time `json:"startDateTime,omitempty"`
	Title         *string    `json:"title,omitempty"`
}

// UpdateTripRequest defines model for UpdateTripRequest.
type UpdateTripRequest = NewTripRequest

// User defines model for User.
type User struct {
	CreatedAt *time.Time           `json:"createdAt,omitempty"`
	Email     *openapi_types.Email `json:"email,omitempty"`
	Id        *openapi_types.UUID  `json:"id,omitempty"`

	// IsActive 認証済みかどうか
	IsActive  *bool      `json:"is_active,omitempty"`
	Name      *string    `json:"name,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// ScheduleId defines model for ScheduleId.
type ScheduleId = openapi_types.UUID

// TripId defines model for TripId.
type TripId = openapi_types.UUID

// ShareToken defines model for shareToken.
type ShareToken = string

// BadRequest defines model for BadRequest.
type BadRequest = Error

// NotFound defines model for NotFound.
type NotFound = Error

// Unauthorized defines model for Unauthorized.
type Unauthorized = Error

// LoginUserJSONRequestBody defines body for LoginUser for application/json ContentType.
type LoginUserJSONRequestBody = LoginRequest

// ChangePasswordJSONRequestBody defines body for ChangePassword for application/json ContentType.
type ChangePasswordJSONRequestBody = PasswordChangeRequest

// UpdatePublicTripByShareTokenJSONRequestBody defines body for UpdatePublicTripByShareToken for application/json ContentType.
type UpdatePublicTripByShareTokenJSONRequestBody = UpdateTripRequest

// AddScheduleToPublicTripJSONRequestBody defines body for AddScheduleToPublicTrip for application/json ContentType.
type AddScheduleToPublicTripJSONRequestBody = NewSchedule

// UpdateScheduleForPublicTripJSONRequestBody defines body for UpdateScheduleForPublicTrip for application/json ContentType.
type UpdateScheduleForPublicTripJSONRequestBody = UpdateSchedule

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody = NewUser

// CreateUserTripJSONRequestBody defines body for CreateUserTrip for application/json ContentType.
type CreateUserTripJSONRequestBody = NewTripRequest

// UpdateUserTripJSONRequestBody defines body for UpdateUserTrip for application/json ContentType.
type UpdateUserTripJSONRequestBody = UpdateTripRequest

// AddScheduleToTripJSONRequestBody defines body for AddScheduleToTrip for application/json ContentType.
type AddScheduleToTripJSONRequestBody = NewSchedule

// UpdateScheduleForTripJSONRequestBody defines body for UpdateScheduleForTrip for application/json ContentType.
type UpdateScheduleForTripJSONRequestBody = UpdateSchedule
