openapi: 3.0.0
info:
  title: Trip App API
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Development server
paths:
  /signup:
    post:
      description: |
        新規ユーザーを仮登録し、本人確認と初期パスワードを記載したメールを送信
        この時点ではアカウントは有効化されない
      operationId: createUser
      tags:
        - ユーザー認証
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '201':
          description: |
            仮登録に成功、本人確認メールを送信
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/verify/{verificationToken}:
    post:
      description: |
        メールに記載されたリンクを踏むことで、ユーザー登録を完了（アカウントを有効化）
      operationId: verifyUser
      tags:
        - ユーザー認証
      parameters:
        - name: verificationToken
          in: path
          required: true
          schema:
            type: string
          description: メールで送信された本人確認用トークン
      responses:
        '200':
          description: ユーザー登録が完了
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '404':
          $ref: '#/components/responses/NotFound'

  /login:
    post:
      description: |
        メールアドレスとメールで送られた初期パスワードを使ってログインし、認証トークン(JWT)を取得
      operationId: loginUser
      tags:
        - ユーザー認証
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: ログイン成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /logout:
    post:
      description: |
        ログイン中のユーザーがログアウト
      operationId: logoutUser
      tags:
        - ユーザー認証
      security:
        - BearerAuth: []
      responses:
        '204':
          description: ログアウト成功

  /me:
    get:
      description: userIdでユーザー情報取得
      operationId: getMe
      tags:
        - ユーザー情報
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          $ref: '#/components/responses/NotFound'

  /me/password:
    put:
      description: |
        ログイン中のユーザーが自身のパスワードを変更
      operationId: changePassword
      tags:
        - ユーザー情報
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
      responses:
        '204':
          description: パスワードが正常に変更されました。
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /trips:
    post:
      description: |
        ユーザーの旅行情報を新規作成
      operationId: createUserTrip
      tags:
        - 旅行情報
      security: 
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTripRequest'
      responses:
        '201':
          description: 旅行情報の作成に成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        '400':
          $ref: '#/components/responses/BadRequest'
    get:
      description: |
        ユーザーの旅行情報を取得
      operationId: getUserTrips
      tags:
        - 旅行情報
      security:
        - BearerAuth: []
      responses:
        '200':
          description: 旅行情報の取得に成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trip'

  /trips/{tripId}:
    get:
      description: |
        特定の旅行情報を取得
      operationId: getUserTrip
      tags:
        - 旅行情報
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
      responses:
        '200':
          description: 旅行情報の取得に成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      description: |
        特定の旅行情報を更新
      operationId: updateUserTrip
      tags:
        - 旅行情報
      parameters:
        - $ref: '#/components/parameters/TripId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTripRequest'
      responses:
        '200':
          description: 旅行情報の更新に成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      description: |
        特定の旅行情報を削除
      operationId: deleteUserTrip
      parameters:
        - $ref: '#/components/parameters/TripId'
      responses:
        '204':
          description: 旅行情報が正常に削除されました。
        '404':
          $ref: '#/components/responses/NotFound'
  /trips/{tripId}/schedules:
    post:
      description: 特定の旅行情報に対してスケジュールを追加します。
      operationId: addScheduleToTrip
      tags:
        - スケジュール管理 (要認証)
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSchedule'
      responses:
        '201':
          description: スケジュールの追加に成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
    get:
      description: 特定の旅行情報に関連するすべてのスケジュールを取得します。
      operationId: getSchedulesForTrip
      tags:
        - スケジュール管理 (要認証)
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
      responses:
        '200':
          description: スケジュールの取得に成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
        '404':
          $ref: '#/components/responses/NotFound'

  /trips/{tripId}/schedules/{scheduleId}:
    get:
      description: 特定のスケジュールを取得します。
      operationId: getScheduleForTrip
      tags:
        - スケジュール管理 (要認証)
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
        - $ref: '#/components/parameters/ScheduleId'
      responses:
        '200':
          description: スケジュールの取得に成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      description: 特定のスケジュールを更新します。
      operationId: updateScheduleForTrip
      tags:
        - スケジュール管理 (要認証)
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
        - $ref: '#/components/parameters/ScheduleId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSchedule'
      responses:
        '200':
          description: スケジュールの更新に成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      description: 特定のスケジュールを削除します。
      operationId: deleteScheduleForTrip
      tags:
        - スケジュール管理 (要認証)
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
        - $ref: '#/components/parameters/ScheduleId'
      responses:
        '204':
          description: スケジュールの削除に成功
        '404':
          $ref: '#/components/responses/NotFound'

  /trips/{tripId}/share:
    post:
      description: 特定の旅行情報に対する共有可能なリンク(トークン)を生成(再生成)します。
      operationId: createShareLinkForTrip
      tags:
        - 共有機能 (要認証)
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
      responses:
        '201':
          description: 共有リンクの生成に成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareLinkResponse'
        '404':
          $ref: '#/components/responses/NotFound'
    get: 
      description: 特定の旅行情報に対する共有可能なリンク(トークン)を取得します。
      operationId: getShareLinkForTrip
      tags:
        - 共有機能 (要認証)
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
      responses:
        '200':
          description: 共有リンクの取得に成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareLinkResponse'
        '404':
          $ref: '#/components/responses/NotFound'
  
  /public/trips/{shareToken}:
    get:
      description: 共有トークンを使って、特定の旅行情報を取得します
      operationId: getPublicTripByShareToken
      tags: 
        - 旅行情報(認証不要)
      parameters: 
        - $ref: '#/components/parameters/shareToken'
      responses:
        '200':
          description: 旅行情報の取得に成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      description: 共有トークンを使って、特定の旅行情報（タイトル、期間など）を更新します（認証不要）。
      operationId: updatePublicTripByShareToken
      tags:
        - 旅行情報(認証不要)
      parameters:
        - $ref: '#/components/parameters/shareToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTripRequest'
      responses:
        '200':
          description: 更新に成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        '404':
          $ref: '#/components/responses/NotFound'
  
  /public/trips/{shareToken}/schedules:
    post:
      description: 特定の旅行情報に対してスケジュールを追加します。
      operationId: addScheduleToPublicTrip
      tags:
        - スケジュール管理 (認証不要)
      parameters:
        - $ref: '#/components/parameters/shareToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSchedule'
      responses:
        '201':
          description: スケジュールの追加に成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

    get:
      description: 特定の旅行情報に関連するすべてのスケジュールを取得します。
      operationId: getSchedulesForPublicTrip
      tags:
        - スケジュール管理 (認証不要)
      parameters:
        - $ref: '#/components/parameters/shareToken'
      responses:
        '200':
          description: スケジュールの取得に成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
        '404':
          $ref: '#/components/responses/NotFound'

  /public/trips/{shareToken}/schedules/{scheduleId}:
    get:
      description: 特定のスケジュールを取得します。
      operationId: getScheduleForPublicTrip
      tags:
        - スケジュール管理 (認証不要)
      parameters:
        - $ref: '#/components/parameters/shareToken'
        - $ref: '#/components/parameters/ScheduleId'
      responses:
        '200':
          description: スケジュールの取得に成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      description: 特定のスケジュールを部分的に更新します。
      operationId: updateScheduleForPublicTrip
      tags:
        - スケジュール管理 (認証不要)
      parameters:
        - $ref: '#/components/parameters/shareToken'
        - $ref: '#/components/parameters/ScheduleId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSchedule'
      responses:
        '200':
          description: スケジュールの更新に成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      description: 特定のスケジュールを削除します。
      operationId: deleteScheduleForPublicTrip
      tags:
        - スケジュール管理 (認証不要)
      parameters:
        - $ref: '#/components/parameters/shareToken'
        - $ref: '#/components/parameters/ScheduleId'
      responses:
        '204':
          description: スケジュールの削除に成功
        '404':
          $ref: '#/components/responses/NotFound'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
    AuthResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        token:
          type: string
          description: Authentication token (JWT) for the new user.
          example: 'eyJhbGciOiJIOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
          format: email
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    NewUser:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
    Message:
      type: object
      properties:
        message:
          type: string
          example: 'Success'
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          description: メールで受け取った初期パスワード
    PasswordChangeRequest:
      type: object
      required:
        - currentPassword
        - newPassword
      properties:
        currentPassword:
          type: string
          description: 現在のパスワード
        newPassword:
          type: string
          description: 新しいパスワード
          minLength: 8
          example: 'newpassword123'
    Trip:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        members:
          type: array
          items:
            $ref: '#/components/schemas/Member'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    NewTripRequest:
      type: object
      required:
        - title
        - startDate
        - endDate
      properties:
        title:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        members:
          type: array
          items:
            $ref: '#/components/schemas/Member'

    UpdateTripRequest:
      $ref: '#/components/schemas/NewTripRequest'
    
    Schedule:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        date:
          type: string
          format: date
        startTime:
          type: string
          pattern: '^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$'
          example: '09:00'
        endTime:
          type: string
          pattern: '^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$'
          example: '12:00'
        memo:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    NewSchedule:
      required:
        - title
        - date
      $ref: '#/components/schemas/UpdateSchedule'
    UpdateSchedule:
      type: object
      properties:
        title:
          type: string
        date:
          type: string
          format: date
        startTime:
          type: string
          pattern: '^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$'
          example: '09:00'
        endTime:
          type: string
          pattern: '^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$'
          example: '12:00'
        memo:
          type: string
          nullable: true

    Member:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string

    ShareLinkResponse:
      type: object
      properties:
        shareToken:
          type: string
          description: 生成された共有用トークン
        shareUrl:
          type: string
          format: uri
          description: ユーザーが共有する完全なURL
          
  parameters:
    TripId:
      name: tripId
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: 旅行情報の一意な識別子
    shareToken:
      name: shareToken
      in: path
      required: true
      schema:
        type: string
      description: 共有用の一意なトークン
    ScheduleId:
      name: scheduleId
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: スケジュールの一意な識別子
